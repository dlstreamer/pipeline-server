openapi: 3.0.0
info:
  description: Video Analytics Serving API
  title: Video Analytics Serving API
  version: 0.0.2
servers:
- url: /
paths:
  /models:
    get:
      description: Return supported models
      operationId: models_get
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Model'
                type: array
          description: Success
      x-openapi-router-controller: vaserving.rest_api.endpoints
  /pipelines:
    get:
      description: Return supported pipelines
      operationId: pipelines_get
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Pipeline'
                type: array
          description: Success
      x-openapi-router-controller: vaserving.rest_api.endpoints
  /pipelines/{name}/{version}:
    get:
      description: Return pipeline description.
      operationId: pipelines_name_version_get
      parameters:
      - explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: version
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pipeline'
          description: Success
      x-openapi-router-controller: vaserving.rest_api.endpoints
    post:
      description: Start new pipeline instance.
      operationId: pipelines_name_version_post
      parameters:
      - explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: version
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PipelineRequest'
        required: true
      responses:
        200:
          description: Success
      x-openapi-router-controller: vaserving.rest_api.endpoints
  /pipelines/{name}/{version}/{instance_id}:
    delete:
      description: Stop pipeline instance.
      operationId: pipelines_name_version_instance_id_delete
      parameters:
      - explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: version
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: instance_id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        200:
          description: Success
      x-openapi-router-controller: vaserving.rest_api.endpoints
    get:
      description: Return pipeline instance summary.
      operationId: pipelines_name_version_instance_id_get
      parameters:
      - explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: version
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: instance_id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineInstanceSummary'
          description: Success
      x-openapi-router-controller: vaserving.rest_api.endpoints
  /pipelines/{name}/{version}/{instance_id}/status:
    get:
      description: Return pipeline instance status.
      operationId: pipelines_name_version_instance_id_status_get
      parameters:
      - explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: version
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: instance_id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineInstanceStatus'
          description: Success
      x-openapi-router-controller: vaserving.rest_api.endpoints
  /pipelines/status_all:
    get:
      description: Returns all pipeline instance status.
      operationId: pipelines_status_get_all
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineInstanceStatus'
          description: Success
      x-openapi-router-controller: vaserving.rest_api.endpoints
components:
  schemas:
    AnyValue: {}
    Pipeline:
      example:
        description: description
        type: GStreamer
        parameters:
          key:
            default: ""
      properties:
        type:
          enum:
          - GStreamer
          - FFmpeg
          type: string
        description:
          type: string
        parameters:
          additionalProperties:
            $ref: '#/components/schemas/Pipeline_parameters'
          type: object
      required:
      - description
      - type
      type: object
    PipelineInstanceStatus:
      example:
        start_time: 1
        elapsed_time: 5
        id: 0
        state: RUNNING
        avg_fps: 6.027456183070403
      properties:
        id:
          format: int32
          type: integer
        state:
          enum:
          - RUNNING
          - COMPLETED
          - ERROR
          - ABORTED
          type: string
        avg_fps:
          type: number
        start_time:
          description: Time in seconds since the epoch.
          format: int32
          type: integer
        elapsed_time:
          description: Elapsed time in seconds.
          format: int32
          type: integer
      required:
      - elapsed_time
      - id
      - start_time
      - state
      type: object
    PipelineInstanceSummary:
      example:
        request:
          destination: {}
          source: {}
          parameters: {}
          tags: {}
        id: 0
        type: type
      properties:
        id:
          format: int32
          type: integer
        request:
          $ref: '#/components/schemas/PipelineRequest'
        type:
          type: string
      required:
      - id
      - request
      - type
      type: object
    URISource:
      properties:
        type:
          enum:
          - uri
          type: string
        uri:
          format: uri
          type: string
      required:
      - type
      - uri
      type: object
    DeviceSource:
      properties:
        type:
          enum:
          - device
          type: string
        path:
          type: string
          format: path
      required:
      - type
      - path
      type: object
    FileDestination:
      properties:
        type:
          enum:
          - file
          type: string
        path:
          format: path
          type: string
      required:
      - type
      - path
      type: object
    KafkaDestination:
      properties:
        host:
          description: Comma seperated list of host:port to use as boostrap servers.
          type: string
        topic:
          type: string
        type:
          enum:
          - kafka
          type: string
      type: object
    MQTTDestination:
      properties:
        host:
          description: host:port to use as mqtt server.
          type: string
        topic:
          type: string
        type:
          enum:
          - mqtt
          type: string
      type: object
    RTSPDestination:
      properties:
        type:
          enum:
          - rtsp
          type: string
        path:
          type: string
          minLength: 1
          pattern: "^[a-zA-Z0-9][a-zA-Z0-9_/-]*[a-zA-Z0-9]$"
      required:
        - type
        - path
      type: object
    FrameDestination:
      discriminator:
        propertyName: type
      oneOf:
        - $ref: '#/components/schemas/RTSPDestination'
      type: object
    FrameAndMetadataDestination:
      anyOf:
        - type: object
          properties:
            frame:
              $ref: '#/components/schemas/FrameDestination'
          required:
            - frame
        - type: object
          properties:
            metadata:
              $ref: '#/components/schemas/MetadataDestination'
          required:
            - metadata
    MetadataDestination:
      discriminator:
        propertyName: type
      oneOf:
        - $ref: '#/components/schemas/KafkaDestination'
        - $ref: '#/components/schemas/MQTTDestination'
        - $ref: '#/components/schemas/FileDestination'
      type: object
    PipelineRequest:
      example:
        source:
          type: uri
          uri: file:///root/video-examples/example.mp4
        parameters: {}
        tags: {}
      properties:
        source:
          discriminator:
            propertyName: type
          oneOf:
          - $ref: '#/components/schemas/URISource'
          - $ref: '#/components/schemas/DeviceSource'
          type: object
        destination:
          oneOf:
          - $ref: '#/components/schemas/MetadataDestination'
          - $ref: '#/components/schemas/FrameAndMetadataDestination'
          type: object
        tags:
          description: Client specified values. Returned with results.
          type: object
        parameters:
          description: Pipeline specific parameters.
          type: object
      type: object
    Model:
      example:
        name: name
        description: description
        type: IntelDLDT
        version: 0
      properties:
        name:
          type: string
        version:
          type: string
        type:
          enum:
          - IntelDLDT
          type: string
        description:
          type: string
      required:
      - name
      - type
      - version
      type: object
    Pipeline_parameters:
      example:
        default: {}
      properties:
        default: {}
